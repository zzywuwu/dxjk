#!/bin/bash
WORK_DIR=/opt/nginx
NGINX_CONF=$WORK_DIR/conf/nginx.conf
NGINX_BIN=$WORK_DIR/sbin/nginx

PHP_FPM_BIN=/usr/local/sbin/php-fpm
PHP_FPM_CONF=$WORK_DIR/conf/php-fpm.conf.default
PHP_INI=$WORK_DIR/conf/php.ini

CONSUMERSYSTEM_BIN=$WORK_DIR/sbin/consumersystem.lua

start_nginx() {
    $NGINX_BIN -c $NGINX_CONF
}
start_phpfrm() {
    $PHP_FPM_BIN -c $PHP_INI -y $PHP_FPM_CONF
}
start_consumersystem() {
    check_pid $CONSUMERSYSTEM_BIN
    ret=$?
    if [ $ret -eq 0 ];then
        echo "$CONSUMERSYSTEM_BIN already runing"
        exit
    fi
    lua $CONSUMERSYSTEM_BIN& >/dev/null
}


check_pid() {
        if [ $# -eq 0 ];then
                return -1
        fi

        local base
        local pid
        base=`basename $1`
        
        if [ "$base" == "consumersystem.lua" ];then
            pid=`ps ax|grep "$1"|grep -v "grep"|awk '{print $1}'`
        else    
            pid=`pgrep $base`
        fi

        if [ "$pid" ]; then
                return 0
        else
                return 1
        fi
}

start_mysql() {
        result=`pgrep mysql`
        if [[ "$result" ]]; then
                echo -e "\nMysql is running , ignore it."       
                echo "If you want to restart it, you must stop it first by yourself."
        else
                service mysqld restart
                check_pid "mysqld"
                ret=$?
                if [ $ret -eq 1 ];then
                        exit
                fi
        fi
}

start() {
        echo -n $"Starting kf_system: "

        start_mysql;
        ulimit -c unlimited >/dev/null 2>&1

        if [ $# -eq 0 ]
        then
                start_nginx 
                start_phpfrm
                start_consumersystem
        else
                while [ "$1" != "" ]
                do
                        case $1 in
                                nginx)
                                        start_nginx;
                                        shift;;
                                php-fpm)
                                        start_phpfrm;
                                        shift;;
                                consumersystem)
                                        start_consumersystem;
                                        shift;;
                                *)
                                        echo "Unrecognized option "$1;
                                        shift;;
                        esac
                done
        fi
        return $retval
}
killproc() {
    base=`basename $1`
    killall $base
}

stop_by_name() {
    base=`basename $1`
    check_pid $base
    ret=$?
        
    if [ $ret -eq 1 ];then
        echo "The $base is not running...";
        return 1
    fi
    
    echo -n $"Stop $base"
    if [ "$base" == "consumersystem.lua" ];then
        con_pid=`ps ax | grep "$CONSUMERSYSTEM_BIN" | grep -v "grep" |awk '{print $1}'`
        kill -9 $con_pid 
    else
        killproc $base 9
    fi
    echo ""
}

stop() {
        if [ $# -eq 0 ]
        then
                stop_by_name $NGINX_BIN
                stop_by_name $PHP_FPM_BIN
                stop_by_name $CONSUMERSYSTEM_BIN
        else
                while [ "$1" != "" ]
                do
                        case $1 in
                                nginx)
                                        stop_by_name $NGINX_BIN;
                                        shift;;
                                php-fpm)
                                        stop_by_name $PHP_FPM_BIN
                                        shift;;
                                consumersystem)
                                        stop_by_name $CONSUMERSYSTEM_BIN
                                        shift;;
                                *)
                                        echo "Unrecognized option "$1;
                                        shift;;
                        esac
                done
        fi
}

restart() {
        stop $*
        sleep 1
        start $*
}

status_by_name() {
    check_pid $1
    ret=$?
    if [ $ret == 0 ];then
        echo "$1 Running"
    else
        echo "$1 Not Run"
    fi
}

status() {
        if [ $# -eq 0 ]
        then
                status_by_name $NGINX_BIN
                status_by_name $PHP_FPM_BIN
                status_by_name $CONSUMERSYSTEM_BIN
        else
                while [ "$1" != "" ]
                do
                        case $1 in
                                nginx)
                                        status_by_name $NGINX_BIN;
                                        shift;;
                                php-fpm)
                                        status_by_name $PHP_FPM_BIN;
                                        shift;;
                                consumersystem)
                                        status_by_name $CONSUMERSYSTEM_BIN;
                                        shift;;
                                *)
                                        echo "Unrecognized option "$1;
                                        shift;;
                        esac
                done
        fi
}


case "$1" in
        start)
                shift;
                start $*
                ;;
        stop)
                shift;
                stop $*
                ;;
        restart)
                shift;
                restart $*
                ;;
        status)
                shift;
                status $*
                ;;
        *)
                echo $"Usage: $0 {start|stop|restart|status [nginx|php-fpm|consumersystem]}"
                RETVAL=2
esac
exit
